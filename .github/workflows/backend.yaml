# name: Backend CI/CD Pipeline

# on:
#   workflow_dispatch:
# env:
#   RESOURCE_GROUP: 
#   CLUSTER_NAME: 
#   KEY_VAULT_NAME:
#   DB_DRIVER: 
#   DB_HOST: 
#   DB_NAME: 
#   DB_PASSWORD: 
#   DB_PORT: 
#   DB_USERNAME: 
#   NAMESPACE: 
# jobs:

#   build-and-push:
#     runs-on: ubuntu-latest

#     defaults:
#       run:
#         working-directory: backend

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Set up Java 21
#         uses: actions/setup-java@v4
#         with:
#           java-version: '21'
#           distribution: 'temurin'
#           cache: maven
#       - name: Build and test with Maven
#         run: mvn clean package
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build and push
#         uses: docker/build-push-action@v6
#         with:
#           context: ./backend
#           file: ./backend/Dockerfile
#           push: true
#           tags: |
#             ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
#             ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
#   deploy:
#     runs-on: ubuntu-latest
#     needs: build-and-push
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Log in to Azure
#         uses: azure/login@v2
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}


#       - name: Set AKS context
#         uses: azure/aks-set-context@v3
#         with:
#           resource-group: ${{ env.RESOURCE_GROUP }}
#           cluster-name: ${{ env.CLUSTER_NAME }}
#       - name: Prepare namespace, config, and secrets
#         run: |
#           # Ensure namespace exists
#           kubectl apply -f k8s/backend/namespace.yml

#           # Create or update configmap
#           kubectl create configmap backend-config \
#             --from-literal=DB_DRIVER='${{ env.DB_DRIVER }}' \
#             --from-literal=DB_HOST='${{ env.DB_HOST }}' \
#             --from-literal=DB_NAME='${{ env.DB_NAME }}' \
#             --from-literal=DB_PORT='${{ env.DB_PORT }}' \
#             -n backend-${{ env.NAMESPACE }} \
#             --dry-run=client -o yaml | kubectl apply -f -
            
#           # Create or update secret
#           kubectl create secret generic backend-secret \
#             --from-literal=DB_USERNAME='${{ env.DB_USERNAME }}' \
#             --from-literal=DB_PASSWORD='${{ env.DB_PASSWORD }}' \
#             -n backend-${{ env.NAMESPACE }} \
#             --dry-run=client -o yaml | kubectl apply -f -
            
#       - name: Deploy to AKS
#         uses: Azure/k8s-deploy@v5
#         with:
#           manifests: |
#             k8s/backend/namespace.yml
#             k8s/backend/backend-deploy.yml
#             k8s/backend/backend-svc.yml
#             k8s/backend/backend-ingress.yml
#             k8s/backend/hpa.yml
#           images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
#           namespace: user-management
        